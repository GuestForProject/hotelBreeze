// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Post {
  id          Int     @id @default(autoincrement())
  uid         String  @default(uuid())
  title       String
  content     String
  isPublished Boolean @default(false)

  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())

  userId Int?
  user   User? @relation(fields: [userId], references: [id])
}

model User {
  id    Int    @id @default(autoincrement())
  uid   String @default(uuid())
  name  String @unique
  email String @unique

  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())

  roleId Int?
  role   Role? @relation(fields: [roleId], references: [id])

  posts Post[]
}

model Role {
  id          Int     @id @default(autoincrement())
  uid         String  @default(uuid())
  code        String  @unique
  name        String
  description String?

  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())

  users User[]
}

model SentEmail {
  id       Int    @id @default(autoincrement())
  uid      String @unique @default(uuid())
  theme    String
  email    String
  template String
  context  Json?
  data     Json?
  // code     String? @db.VarChar(6)

  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
  verificationCode VerificationCode?
}

model VerificationCodeType {
  id               Int                @id @default(autoincrement())
  uid              String             @unique @default(uuid())
  name             String
  code             String             @unique
  VerificationCode VerificationCode[]
}

model VerificationCode {
  id      Int      @id @default(autoincrement())
  uid     String   @unique @default(uuid())
  code    String
  expired DateTime
  attempt Int      @default(0)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  sentEmailId Int        @unique
  sentEmail   SentEmail? @relation(fields: [sentEmailId], references: [id])

  typeId Int
  type   VerificationCodeType? @relation(fields: [typeId], references: [id])
}
